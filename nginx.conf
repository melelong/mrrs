user  root;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    # 启用 rewrite 模块
    rewrite_log on;
    #开启高效文件传输模式
    sendfile        on;
    #开启防止网络阻塞
    tcp_nopush     on;
    #开启防止网络阻塞
    tcp_nodelay    on;

    keepalive_timeout  65;

    #HttpGZip模块配置
    #开启gzip压缩
    gzip  on;
    #设置允许压缩的页面最小字节数
    gzip_min_length 1k;
    #申请4个单位为16K的内存作为压缩结果流缓存
    gzip_buffers 4 16k;
    #设置识别http协议的版本，默认为1.1
    gzip_http_version 1.1;
    #指定gzip压缩比，1-9数字越小，压缩比越小，速度越快
    gzip_comp_level 2;
    #指定压缩的类型
    # text/html
    gzip_types text/xml text/css text/javascript application/javascript application/x-javascript application/json application/xml image/svg+xml;
    # gzip_types text/plain application/x-javascript text/css application/xml application/javascript;
    #让前端的缓存服务器进过gzip压缩的页面
    gzip_vary on; 

    include /etc/nginx/conf.d/*.conf;
    ssl_certificate /etc/nginx/ssl/melelong.com_bundle.crt;   #填写您的证书文件名称，例如：cloud.tencent.com_bundle.crt
    ssl_certificate_key /etc/nginx/ssl/melelong.com.key;    #填写您的私钥文件名称，例如：cloud.tencent.com.key

# 配置http://www.melelong.com
server {
   listen 80;
   server_name melelong.com *.melelong.com;    #填写您的证书绑定的域名，例如：cloud.tencent.com
   return 301 https://$host$request_uri;  	 #将http的域名请求转成https
   
}
# 配置https://www.melelong.com
server {
    listen 443 ssl http2;
    server_tokens off;
    keepalive_timeout 5;
    server_name melelong.com www.melelong.com; #填写您的证书绑定的域名，例如：www.cloud.tencent.com
    ssl_certificate /etc/nginx/ssl/melelong.com_bundle.crt; #填写您的证书文件名称，例如：cloud.tencent.com_bundle.crt
    ssl_certificate_key /etc/nginx/ssl/melelong.com.key; #填写您的私钥文件名称，例如：cloud.tencent.com.key
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # 可参考此 SSL 协议进行配置
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;   #可按照此加密套件配置，写法遵循 openssl 标准
    ssl_prefer_server_ciphers on;
    # 项目映射
    location / {
      return 301 https://blog.melelong.com;
    }
    location /admin {
      return 301 https://admin.melelong.com;
    }
    location /demo {
      return 301 https://demo.melelong.com;
    }
    location /cd {
      return 301 https://cd.melelong.com;
    }
    location /files {
      return 301 https://demo.melelong.com$request_uri;
    }
}
# 配置https://blog.melelong.com

server {
  listen 443 ssl http2;
  # 改为你的网址
  server_name blog.melelong.com;
  # 证书的公私钥
  ssl_certificate /etc/nginx/ssl/blog.melelong.com.pem; #填写您的证书文件名称，例如：cloud.tencent.com_bundle.crt
  ssl_certificate_key /etc/nginx/ssl/blog.melelong.com.key; #填写您的私钥文件名称，例如：cloud.tencent.com.key

  location / {
    # 改为容器的 PORT
    proxy_pass http://172.20.0.3:80;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
  }
}

# 配置https://admin.melelong.com
server {
    listen 443 ssl http2;
    server_tokens off;
    keepalive_timeout 5;
    server_name admin.melelong.com; #填写您的证书绑定的域名，例如：www.cloud.tencent.com
    ssl_certificate /etc/nginx/ssl/admin.melelong.com.pem; #填写您的证书文件名称，例如：cloud.tencent.com_bundle.crt
    ssl_certificate_key /etc/nginx/ssl/admin.melelong.com.key; #填写您的私钥文件名称，例如：cloud.tencent.com.key
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # 可参考此 SSL 协议进行配置
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;   #可按照此加密套件配置，写法遵循 openssl 标准
    ssl_prefer_server_ciphers on;
    client_max_body_size 100M;
    # 代理到项目
    location / {
      proxy_pass http://127.0.0.1:10445;
    }
    # 百度统计代理
    location /rest/2.0 {
      proxy_pass https://openapi.baidu.com;
    }
    location /oauth {
      proxy_pass https://openapi.baidu.com;
    }
    # 接口代理
    location /api {
      proxy_pass http://127.0.0.1:7666;
      proxy_set_header Accept application/json;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /static {
      proxy_pass http://127.0.0.1:7666;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /res {
      proxy_pass http://127.0.0.1:7666;
      proxy_set_header Accept application/json;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /article/ {
      add_header Cache-Control no-cache;
      add_header Expires 0;
      rewrite ^/article/(.*)$ https://blog.melelong.com/article/$1 permanent;
    }
    location https://s1.vika.cn {
        proxy_pass https://s1.vika.cn;
    }
}
# 配置https://demo.melelong.com
server {
    listen 443 ssl http2;
    server_tokens off;
    keepalive_timeout 5;
    charset utf-8;
    server_name demo.melelong.com; #填写您的证书绑定的域名，例如：www.cloud.tencent.com
    ssl_certificate /etc/nginx/ssl/demo.melelong.com.pem; #填写您的证书文件名称，例如：cloud.tencent.com_bundle.crt
    ssl_certificate_key /etc/nginx/ssl/demo.melelong.com.key; #填写您的私钥文件名称，例如：cloud.tencent.com.key
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # 可参考此 SSL 协议进行配置
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;   #可按照此加密套件配置，写法遵循 openssl 标准
    ssl_prefer_server_ciphers on;
    
    location /files {
        alias /usr/share/nginx/html/demo;
        expires 1d;
        autoindex on;
        
    }
    # 代理到项目
    location / {
        proxy_pass http://127.0.0.1:5200;
    #   proxy_pass http://127.0.0.1:10446;
    }
    # location ~ /music/(.*) {
    #   proxy_pass http://172.17.0.1:5200/$1;
    #   proxy_set_header Accept application/json;
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
}
# 配置https://cd.melelong.com
server {
    listen 443 ssl http2;
    server_name cd.melelong.com;

    ssl_certificate /etc/nginx/ssl/cd.melelong.com.pem;
    ssl_certificate_key /etc/nginx/ssl/cd.melelong.com.key;

    location / {
        proxy_pass http://127.0.0.1/:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_redirect default;
    }
}

# 个人博客前台
server {
    listen 10444;
    server_tokens off;
    keepalive_timeout 5;
    location ~* ^.+$ {
      root /usr/share/nginx/html/blog/blogFrontDesk; #填写您的网站根目录，例如：/usr/local/lighthouse/softwares/wordpress
      try_files $uri $uri/ @router;#针对vue项目配置，需要指向下面的@router否则会出现vue的路由在nginx中刷新出现404
      index index.html repair.html;
      allow 127.0.0.1; 
      allow 175.178.18.136; 
    }
    #针对vue项目配置，
    #对应上面的@router，主要原因是路由的路径资源并不是一个真实的路径，所以无法找到具体的文件
    #因此需要rewrite到index.html中，然后交给路由在处理请求资源
    location @router {
        rewrite ~*^.*$ /index.html last;
    }
    # 缓存图片
    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
      access_log   off; 
      expires      30d; #根据自己需要修改时间
    }

    #缓存js、css、视频文件
    location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
      access_log   off;
      expires      24h;
    }
    
    # 缓存html类型文件
    location ~* ^.+\.(html|htm)$ {
      expires      1h;
    }
    
    # 缓存字体文件，配合gzip更好
    location ~* ^.+\.(eot|ttf|otf|woff|svg)$ {
      access_log   off;
      expires 30d;
    }
    location ~* \.php$ {
        fastcgi_pass   127.0.0.1:9000;
        include /etc/nginx/default.d/*.conf;
        client_max_body_size 20m;
        fastcgi_connect_timeout 30s;
        fastcgi_send_timeout 30s;
        fastcgi_read_timeout 30s;
        fastcgi_intercept_errors on;
    }
    
}
# 个人博客后台
server {
    listen 10445;
    server_tokens off;
    keepalive_timeout 5;
    location ~* ^.+$ {
      root /usr/share/nginx/html/blog/blogBackground; #填写您的网站根目录，例如：/usr/local/lighthouse/softwares/wordpress
      try_files $uri $uri/ @router;#针对vue项目配置，需要指向下面的@router否则会出现vue的路由在nginx中刷新出现404
      index index.html repair.html;
      allow 127.0.0.1; 
      allow 175.178.18.136; 
    }
    #针对vue项目配置，
    #对应上面的@router，主要原因是路由的路径资源并不是一个真实的路径，所以无法找到具体的文件
    #因此需要rewrite到index.html中，然后交给路由在处理请求资源
    location @router {
        rewrite ~*^.*$ /index.html last;
    }
    # 缓存图片
    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
      access_log   off; 
      expires      30d; #根据自己需要修改时间
    }

    #缓存js、css、视频文件
    location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
      access_log   off;
      expires      24h;
    }
    
    # 缓存html类型文件
    location ~* ^.+\.(html|htm)$ {
      expires      1h;
    }
    
    # 缓存字体文件，配合gzip更好
    location ~* ^.+\.(eot|ttf|otf|woff|svg)$ {
      access_log   off;
      expires 30d;
    }
    location ~* \.php$ {
        fastcgi_pass   127.0.0.1:9000;
        include /etc/nginx/default.d/*.conf;
        client_max_body_size 20m;
        fastcgi_connect_timeout 30s;
        fastcgi_send_timeout 30s;
        fastcgi_read_timeout 30s;
        fastcgi_intercept_errors on;
    }
    
}
# demo
server {
    listen 10446;
    server_tokens off;
    keepalive_timeout 5;
    location ~* ^.+$ {
      root /usr/share/nginx/html/demo; #填写您的网站根目录，例如：/usr/local/lighthouse/softwares/wordpress
    #   try_files $uri $uri/ @router;#针对vue项目配置，需要指向下面的@router否则会出现vue的路由在nginx中刷新出现404
      index index.html repair.html;
      allow 127.0.0.1; 
      allow 175.178.18.136; 
    }
    #针对vue项目配置，
    #对应上面的@router，主要原因是路由的路径资源并不是一个真实的路径，所以无法找到具体的文件
    #因此需要rewrite到index.html中，然后交给路由在处理请求资源
    # location @router {
    #     rewrite ~*^.*$ /index.html last;
    # }
    # 缓存图片
    location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
      access_log   off; 
      expires      30d; #根据自己需要修改时间
    }

    #缓存js、css、视频文件
    location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
      access_log   off;
      expires      24h;
    }
    
    # 缓存html类型文件
    location ~* ^.+\.(html|htm)$ {
      expires      1h;
    }
    
    # 缓存字体文件，配合gzip更好
    location ~* ^.+\.(eot|ttf|otf|woff|svg)$ {
      access_log   off;
      expires 30d;
    }
    location ~* \.php$ {
        fastcgi_pass   127.0.0.1:9000;
        include /etc/nginx/default.d/*.conf;
        client_max_body_size 20m;
        fastcgi_connect_timeout 30s;
        fastcgi_send_timeout 30s;
        fastcgi_read_timeout 30s;
        fastcgi_intercept_errors on;
    }
    
}
}


